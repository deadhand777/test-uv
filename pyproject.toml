[project]
name = "test-uv"
version = "0.0.1"
description = "This is a test of a new project templete"
authors = [{ name = "Chris Schulz", email = "chris.schulz13@yahoo.de" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.8,<4.0"
dependencies = [
    "boto3>=1.35.45",
    "feature-engine==1.6",
    "imblearn>=0.0",
    "joblib>=1.4.2",
    "loguru>=0.7.2",
    "numpy>=1.24.4",
    "pandas>=2.0.3",
    "pydantic>=2.9.2",
    "sagemaker[local]==2.232.1",
    "scikit-learn==1.2.1",
]

[project.urls]
Homepage = "https://deadhand777.github.io/test-uv/"
Repository = "https://github.com/deadhand777/test-uv"
Documentation = "https://deadhand777.github.io/test-uv/"

[tool.uv]
dev-dependencies = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.20.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.235",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.19.0",
    "black>=24.8.0",
    "flake8>=5.0.4",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["src", "cdk"]

[tool.mypy]
files = ["src"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
ignore_missing_imports = "True"
disable_error_code = "no-any-unimported, no-redef"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 180
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
lint.ignore = [
    # Rewrite as a literal
    "C408",
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Avoid specifying long messages outside the exception class
    "TRY003",
    # Use of `assert` detected
    "S101",
    "TRY300",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["test_uv"]


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
